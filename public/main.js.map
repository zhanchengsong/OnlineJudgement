{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/service/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oj-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { HttpModule} from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { DataService} from './service/data.service';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport {routing} from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { NavbarComponent } from './components/navbar/navbar.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    routing,\n    FormsModule\n  ],\n  providers: [{\n    provide: \"data\",\n    useClass: DataService\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from \"@angular/router\";\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nconst appRoutes: Routes = [\n  {\n    path : \"\",\n    redirectTo:\"problems\",\n    pathMatch: \"full\"\n  },\n  {\n    path: 'problems',\n    component: ProblemListComponent\n  },\n  {\n    path: 'problems/:id',\n    component: ProblemDetailComponent\n  },\n  {\n    path: \"**\",\n    redirectTo: \"problems\"\n  }\n]\n\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-light bg-light justify-content-between\\\">\\n\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\\\" >\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n        <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"mx-auto order-0\\\">\\n      <a class=\\\"navbar-brand mx-auto\\\" href=\\\"#\\\">{{brandName}}</a>\\n    </div>\\n\\n    <div class=\\\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n\\n        <li>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Sign in</button>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          {{username}}\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n              <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Profile</a>\\n              <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Favourite</a>\\n              <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Submission</a>\\n              <div class=\\\"dropdown-divider\\\"></div>\\n              <a class=\\\"dropdown-item\\\" href=\\\"#\\\" >Logout</a>\\n          </div>\\n        </li>\\n\\n      </ul>\\n    </div>\\n    <!--<ul class=\\\"nav navbar-nav navbar-right\\\">-->\\n\\n        <!--<li>-->\\n          <!--<button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Sign in</button>-->\\n        <!--</li>-->\\n\\n        <!--<li class=\\\"nav-item dropdown\\\">-->\\n          <!--<a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">-->\\n            <!--{{username}}-->\\n          <!--</a>-->\\n          <!--<div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">-->\\n            <!--<a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Profile</a>-->\\n            <!--<a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Favourite</a>-->\\n            <!--<a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Submission</a>-->\\n            <!--<div class=\\\"dropdown-divider\\\"></div>-->\\n            <!--<a class=\\\"dropdown-item\\\" href=\\\"#\\\" >Logout</a>-->\\n          <!--</div>-->\\n        <!--</li>-->\\n\\n      <!--</ul>-->\\n\\n    <!--</div>-->\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  brandName = \"Zhancheng\"\n  username = \"Unknown\"\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmV3LXByb2JsZW0vbmV3LXByb2JsZW0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\" name=\\\"problemName\\\" required placeholder=\\\"Enter Problem Name\\\"\\n             [(ngModel)]=\\\"newProblem.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem Description</label>\\n      <textarea type=\\\"text\\\" row=\\\"3\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\" name=\\\"problemDesc\\\" required placeholder=\\\"Enter Problem Description\\\"\\n                [(ngModel)]=\\\"newProblem.desc\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\" [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option value=\\\"\\\" disabled selected>\\n          Select difficulty\\n        </option>\\n        <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n      </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\">Add Problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport { Problem} from '../../models/problem.model';\nimport { FormsModule }   from '@angular/forms';\nconst DEFAULT_PROBELM : Problem = Object.freeze({\n  id: 0,\n  name: \"\",\n  desc: \"\",\n  difficulty: 'Easy'\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\n  constructor(@Inject (\"data\") private data) { }\n  public difficulties = [\"Easy\", \"Medium\",\"Hard\",\"Super\"];\n\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBELM)\n\n  ngOnInit() {\n\n  }\n  addProblem() : void{\n    this.data.addProblem(this.newProblem).catch(error => alert(error.body));\n    this.newProblem = Object.assign({},DEFAULT_PROBELM)\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvYmxlbS1kZXRhaWwvcHJvYmxlbS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div classs=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-xs-12 col-d-4\\\">\\n    <div>\\n      <h2>\\n        {{problem.id}}.{{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {Problem} from '../../models/problem.model';\nimport {ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n  constructor(\n    private route: ActivatedRoute,\n    @Inject(\"data\") private data\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.problem = this.data.getProblem(+params[\"id\"])\n        .then(problem => this.problem = problem);\n\n    });\n  }\n\n}\n","module.exports = \".difficulty {\\n  min-width: 65px;\\n  margin-right: 10px;\\n}\\n\\n.label.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n\\n.title {\\n  font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n\\n.diff-super {\\n  background-color: #8d16e2;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9ibGVtLWxpc3QvcHJvYmxlbS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsbUJBQW1CO0NBQ3BCOztBQUVEO0VBQ0UsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixnQkFBZ0I7Q0FDakI7O0FBRUQ7RUFDRSxpQkFBaUI7Q0FDbEI7O0FBRUQ7RUFDRSwwQkFBMEI7Q0FDM0I7O0FBRUQ7RUFDRSwwQkFBMEI7Q0FDM0I7O0FBRUQ7RUFDRSwwQkFBMEI7Q0FDM0I7O0FBRUQ7RUFDRSwwQkFBMEI7Q0FDM0IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Byb2JsZW0tbGlzdC9wcm9ibGVtLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kaWZmaWN1bHR5IHtcbiAgbWluLXdpZHRoOiA2NXB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG5cbi5sYWJlbC5kaWZmaWN1bHR5IHtcbiAgcGFkZGluZy10b3A6IDAuNmVtO1xuICBjb2xvcjogI2ZiZmRmYTtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4udGl0bGUge1xuICBmb250LXNpemU6IDEuMmVtO1xufVxuXG4uZGlmZi1lYXN5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQyZWJmNDtcbn1cblxuLmRpZmYtbWVkaXVtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzkyY2Y1Yztcbn1cblxuLmRpZmYtaGFyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkZDBkMWU7XG59XG5cbi5kaWZmLXN1cGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzhkMTZlMjtcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" [routerLink]=\\\"['/problems', problem.id]\\\">\\n      <span class=\\\"{{'pull-left label difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">{{problem.difficulty}}</span>\\n      <strong class=\\\"title\\\">{{problem.id}}.{{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\\n\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {Problem} from '../../models/problem.model';\nimport {Subscription} from \"rxjs\";\n\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n  constructor(@Inject(\"data\") private data) { }\n\n  ngOnInit() {\n    this.subscriptionProblems = this.data.getProblems().subscribe(problems => this.problems = problems);\n\n  }\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {Problem} from '../models/problem.model';\nimport {PROBLEMS} from '../mock-problems';\nimport {find} from 'rxjs/operators';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http'\nimport {BehaviorSubject, Observable} from \"rxjs\";\n\n@Injectable()\nexport class DataService {\n\n  private problemSource = new BehaviorSubject<Problem[]>([]);\n  constructor(private http: Http) { }\n\n  private handleError(error:any): Promise<any> {\n    console.error('An error had occured' , error);\n    return Promise.reject(error.body || error);\n  }\n\n  getProblems(): Observable<Problem[]>{\n    this.http.get('api/v1/problems')\n      .toPromise()\n      .then((res:Response) => {\n        this.problemSource.next(res.json());\n      })\n      .catch (this.handleError);\n\n    return this.problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.http.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res:Response) => res.json() )\n      .catch (this.handleError);\n\n  }\n  addProblem(newProblem: Problem): Promise<Problem> {\n      let headers = new Headers({'content-type':'application/json'});\n      const options = new RequestOptions ({headers: headers})\n      return this.http.post('/api/v1/problem',newProblem, options )\n        .toPromise()\n        .then((res:Response) => {\n          this.getProblems(); //refresh the previous observable\n          return res.json()\n        }).catch(this.handleError);\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}